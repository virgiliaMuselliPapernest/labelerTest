name: Auto Label Team PR

on:
  # Déclenche le workflow lors de l'ouverture ou de la réouverture d'une pull request.
  pull_request:
    types: [opened, reopened]

# Les variables d'environnement sont utilisées pour définir facilement les membres de l'équipe et le label.
env:
  # Liste des noms d'utilisateur GitHub des membres de l'équipe, séparés par des virgules.
  TEAM_MEMBERS: "VirgiliaMuselliPapernest"
  # Le nom du label à appliquer. Assurez-vous qu'il existe dans le dépôt.
  PR_LABEL: "AppCore"

jobs:
  label_pr:
    # S'assure que le job ne s'exécute que sur les dépôts GitHub (pas sur les forks externes).
    # Cela permet d'accéder aux secrets et aux jetons de manière sécurisée.
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Nécessaire pour ajouter un label à la PR.

    steps:
      - name: 'Check if PR author is a team member'
        id: check_author
        # Utilise une commande shell pour vérifier si l'auteur de la PR est dans la liste.
        # Le résultat (true/false) est stocké dans la sortie du step.
        run: |
          AUTHOR="${{ github.event.pull_request.user.login }}"
          MEMBERS_LIST=$(echo "${{ env.TEAM_MEMBERS }}" | tr -d '[:space:]' | tr ',' '\n')
          
          if echo "$MEMBERS_LIST" | grep -q "^$AUTHOR$"; then
            echo "PR author '$AUTHOR' is a team member."
            echo "is_team_member=true" >> $GITHUB_OUTPUT
          else
            echo "PR author '$AUTHOR' is NOT a team member. Skipping label."
            echo "is_team_member=false" >> $GITHUB_OUTPUT
          fi
          
      - name: 'Add label if author is team member'
        # N'exécute cette étape que si le step précédent a déterminé que l'auteur est membre de l'équipe.
        if: steps.check_author.outputs.is_team_member == 'true'
        uses: actions/labeler@v4 # Une action GitHub pour gérer les labels.
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          # L'action labeler nécessite un fichier de configuration, mais on peut la contourner
          # en utilisant l'option 'sync-labels' et en définissant le label.
          # Cependant, pour une simple application, l'utilisation directe de l'API est souvent plus simple.
          # Remplaçons par une action plus directe pour appliquer un label:
          
      - name: 'Apply specified label'
        if: steps.check_author.outputs.is_team_member == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ${{ env.PR_LABEL }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
